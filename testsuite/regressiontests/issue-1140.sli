/*
 *  issue-1140.sli
 *
 *  This file is part of NEST.
 *
 *  Copyright (C) 2004 The NEST Initiative
 *
 *  NEST is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  NEST is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with NEST.  If not, see <http://www.gnu.org/licenses/>.
 *
 */


 /** @BeginDocumentation
Name: testsuite::issue-1140

Synopsis: (issue-1140) run -> NEST exits if test fails

Description:
Tests if parameters for inhomogeneous_poisson_generator can be set with empty
arrays for rate_times and rate_values.

Author: Håkon Mørk
FirstVersion: March 2019
*/

(unittest) run
/unittest using

M_ERROR setverbosity

% Check if we can set parameters with empty arrays for rate_times
% and rate_values without causing a segfault.
{
  ResetKernel

  /params
  <<
    /rate_times []
    /rate_values []
  >> def
  /ipg /inhomogeneous_poisson_generator Create def
  ipg params SetStatus
}
pass_or_die

% Check if parameters on creation are set properly when set implicitly
% with Create. Create temporarily changes default values, then resets
% them, which would trigger the issue.
{
  ResetKernel

  /params
  <<
    /rate_times [ 10.0 110.0 210.0 ]
    /rate_values [ 400.0 1000.0 200.0 ]
  >> def
  /ipg /inhomogeneous_poisson_generator params Create def
  /status ipg GetStatus def

  true
  [ /rate_times /rate_values ]
  {
    /element Set
    status element get
    params element get cv_dv
    eq
  } Fold
}
assert_or_die

endusing
